##############################################################
# file: scripting1.lsf
# This file shows how to run multiple simulations using scripting.
# You should open scripting1.fsp before running this script
##############################################################

# define 10 rod radii to use
rad = linspace(0.5e-6,3e-6,10);

# reserve 3 matrices, 1 for Transmission, 1 for reflection
# one for the total in all directions
T = matrix(length(rad));
R = matrix(length(rad));
Total = matrix(length(rad));

##############################################################
# Option 1: Run simulations one at a time, using a single
# 'for' loop to setup, run, and analyze the simulations
##############################################################
if (1) {
# start a loop over each desired radius
for(i=1:length(rad)) {

  # switch to layout mode so that you can edit the objects
  switchtolayout;

  # set the radius of the object named "rod" to the desired value
  setnamed("rod","radius",rad(i));

  # output which simulation is running
  ?"running simulation " + num2str(i) + " of " + num2str(length(rad));

  # run the simulation
  run;
  
  # get transmission and reflection from individual monitors
  T(i) = transmission("trans_box::x2");       # Transmission
  R(i) = abs(transmission("trans_box::x1"));  # Reflection
  
  # get total from the analysis object
  runanalysis;
  temp =  getresult("trans_box","T");  # total 
  Total(i) =temp.T;
  f = temp.f;

} # end of the main loop over the radius

# plot the final results
plot(rad*1e6,R,T,Total,"radius (microns)","normalized power","transmission and reflection at " + num2str(c/f*1e6) + " microns");
legend("R","T","total");

} # End of if statement to select the portion of code to run



##############################################################
# Option 2: Use one for loop to setup simulations and submit
# them to the job manager. Use a 2nd for loop to load and 
# analyze the results.
##############################################################
if (0) {

for(i=1:length(rad)) {

  # switch to layout mode so that you can edit the objects
  switchtolayout;

  # set the radius of the object named "rod" to the desired value
  setnamed("rod","radius",rad(i));

  # output which simulation is running
  ?"saving simulation " + num2str(i) + " of " + num2str(length(rad));

  # save the simulation and add to the job queue
  f_name="sim_"+num2str(i);
  save(f_name);
  addjob(f_name);
}

# Run all jobs in queue
# Alternatively, the simulations could be run from the command prompt,
# without using the graphical CAD
runjobs;

for(i=1:length(rad)) {
  f_name="sim_"+num2str(i);
  load(f_name);

  # get transmission and reflection from individual monitors
  T(i) = transmission("trans_box::x2");       # Transmission
  R(i) = abs(transmission("trans_box::x1"));  # Reflection
  
  # get total from the analysis object
  runanalysis;
  temp =  getresult("trans_box","T");  # total 
  Total(i) =temp.T;
  f = temp.f;

} # end of the main loop over the radius

# plot the final results
plot(rad*1e6,R,T,Total,"radius (microns)","normalized power","transmission and reflection at " + num2str(c/f*1e6) + " microns");
legend("R","T","total");

}

##############################################################
# Option 3: Use the graphical parameter sweep feature
# 1) run 'radius_sweep' from the Optimization and Sweeps module 
# 2) use the code within the following if statement to plot the results
##############################################################

if (0) {
  mname="radius_sweep";
  runsweep(mname);
  T=getsweepresult(mname,"forward");
  R=getsweepresult(mname,"backward");
  Total=getsweepresult(mname,"total");

  # plot the final results
  plot(T.radius*1e6,R.T,T.T,Total.T,"radius (microns)","normalized power","transmission and reflection at " + num2str(c/f*1e6) + " microns");
  legend("R","T","total");
}